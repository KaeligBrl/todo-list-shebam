{% extends 'base.html.twig' %}

{% block content %}
    <title>{%  block title %}Semaine Suivante - {% block title_base %}{{ parent() }}{% endblock %}{% endblock %}</title>
	<div class="mb-5">
        <img class="d-block mx-auto" style="width: 300px" src="{{ asset('/assets/images/logo-todo.png') }}"
            alt="Logo de connexion To Do List">
		<h1 class="text-center color-white mb-3">Semaine Suivante</h1>
        <nav class="navbar navbar-expand-lg">
            <ul class="navbar-nav mx-auto " id="navbarqaqa">
                        <li class="nav-item"> 
                            <a class="
                                        {% if app.request.attributes.get('_route') starts with 'next_week_p1' %}active-filters{% endif %}
                                        {% if app.request.attributes.get('_route') starts with 'modify_task_p1_nw' %}active-filters{% endif %}
                                        navbar-text text-uppercase text-margin" href="{{ path('next_week_p1') }}">Priorité 1 <i class="color-white fas fa-tasks"></i></a>
                        </li>
                        <li class="nav-item"> 
                            <a class="navbar-text text-uppercase text-margin" href="{{ path('next_week_p2') }}">Priorité 2 <i class="color-white fas fa-tasks"></i></a>
                        </li>
                        <li class="nav-item">
                            <a class="navbar-text text-uppercase text-margin" href="{{ path('next_week_waiting_return')}}">Attente retour <i
                                    class="color-white fas fa-hourglass-start"></i></a>
                        </li>
                        <li class="nav-item"> 
                            <a class="navbar-text text-uppercase text-margin" href="{{ path('next_week_appointment') }}">Rendez-vous <i class="color-white far fa-calendar-check"></i></a></a>
                        </li>
            </ul> 
        </nav>
		<div class="container text-center padding-dopdown-mobile">
            {% if roles[userRole].add_task is defined and roles[userRole].add_task %}
                <div class="mb-4">
                    <a class="color-yellow text-20 text-bold" href="#ajouterunetachep1"><i class="fas fa-plus-circle"></i>&nbsp; Ajouter une tâche</a>
                </div>
            {% endif %}

            <table id="tableOrderTaskP1" class="table mb-5 table-bordered" data-toggle="table" {% if roles[userRole].reorder_task is defined and roles[userRole].reorder_task %} data-use-row-attr-func="true" data-reorderable-rows="true" {% endif %}>
                <thead class="bg-blue-dark-light table-borderless" border-right-style: none;>
                    <tr style="border-right-style: none;">
                        <th class="color-yellow text-bold" data-field="id" data-visible="false">ID</th>
                        <th class="color-yellow text-bold" data-field="customer" data-sortable="true" scope="col">Client</th>
                        <th class="color-yellow text-bold" data-field="subject"  data-sortable="true" scope="col">Sujet</th>
                        <th  class="color-yellow text-bold"data-field="person" data-sortable="true" scope="col">Équipe</th>
                        {% if userRole is not null and roles[userRole] is defined %}
                            {% set showActions =
                            roles[userRole].waiting_return_in_p1_nw is defined and roles[userRole].waiting_return_in_p1_nw or
                            roles[userRole].task_p1_to_p2_nw is defined and roles[userRole].task_p1_to_p2_nw or
                            roles[userRole].task_p1_nw_to_p1_cw_button is defined and roles[userRole].task_p1_nw_to_p1_cw_button or
                            roles[userRole].task_p1_modify_nw is defined and roles[userRole].task_p1_modify_nw or
                            roles[userRole].task_p1_delete_nw is defined and roles[userRole].task_p1_delete_nw
                            %}

                            {% if showActions %}
                                <th class="color-yellow" scope="col">Action</th>
                            {% endif %}

                            {% set showDoneButtonCw = roles[userRole].button_done is defined and roles[userRole].button_done
                            %}
                        
                            {% if showDoneButtonCw %}
                                <th class="color-yellow" scope="col">Fait</th>
                            {% endif %}
                        {% endif %}
                 
                    </tr>
                </thead>
                <tbody class="bg-blue-dark">
                    {% for task in task %}
                        {% if task.p1 == 1 and task.p2 == 0 and task.nextweek == 1 %}
                            <tr class="popKeke {% if task.done == 1 %}bg-yellow-dark{% endif %}" data-taskdone="{{task.id}}">
                                <td>{{ task.id }}</td>
                                <td class="color-white text-bold">{{task.customer}}</td>
                                <td class="color-white text-bold">
                                    {% if task.object is empty %}{% else %}{{task.object}}<br>{% endif %}
                                    {% if task.subobject1 is empty %}{% else %}{{task.subobject1}}<br>{% endif %} 
                                    {% if task.subobject1 is empty %}{% else %}{{task.subobject2}}<br>{% endif %}
                                    {% if task.subobject1 is empty %}{% else %}{{task.subobject3}}{% endif %}
                                </td>
                                <td class="color-white text-bold">{% for task in task.users %}
                                        {{ task.firstname }} <br>
                                    {% endfor %}
                                </td>
                                {% if userRole is not null and roles[userRole] is defined %}
                                {% set showActions =
                                
                                roles[userRole].waiting_return_in_p1_nw is defined and roles[userRole].waiting_return_in_p1_nw or
                                roles[userRole].task_p1_to_p2_nw is defined and roles[userRole].task_p1_to_p2_nw or
                                roles[userRole].task_p1_nw_to_p1_cw_button is defined and roles[userRole].task_p1_nw_to_p1_cw_button or
                                roles[userRole].task_p1_modify_nw is defined and roles[userRole].task_p1_modify_nw or
                                roles[userRole].task_p1_delete_nw is defined and roles[userRole].task_p1_delete_nw
                                %}
                                    {% if showActions %}
                                        <td>
                                            {% if roles[userRole].waiting_return_in_p1_nw is defined and roles[userRole].waiting_return_in_p1_nw %}
                                                <a class="color-yellow" href="{{ path('to_p1_from_waiting_return_nw', {'id': task.id }) }}"><i class="fas fa-hourglass-start"></i></a>&nbsp;
                                            {% endif %}

                                            {% if roles[userRole].task_p1_to_p2_nw is defined and roles[userRole].task_p1_to_p2_nw %}
                                                <a class="color-yellow text-bold" href="{{ path('change_task_nw_p1_to_p2', {'id': task.id}) }}"><span>P2</span></a>&nbsp;
                                            {% endif %}

                                            {% if roles[userRole].task_p1_nw_to_p1_cw_button is defined and roles[userRole].task_p1_nw_to_p1_cw_button %}
                                                <a class="color-yellow" href="{{ path('change_task_p1_nw_to_p1_cw', {'id': task.id}) }}"><i class="fas fa-undo"></i>&nbsp;</a>
                                            {% endif %}
                                            
                                            {% if roles[userRole].task_p1_modify_nw is defined and roles[userRole].task_p1_modify_nw %}                                        
                                                <a class="color-yellow" href="{{ path('modify_task_p1_nw', {'id': task.id}) }}"><i class="fas fa-cog"></i></a>&nbsp;
                                            {% endif %}
                                                
                                            {% if roles[userRole].task_p1_delete_nw is defined and roles[userRole].task_p1_delete_nw %}
                                                <a class="color-yellow" href="{{ path('delete_task_nw_p1', {'id': task.id}) }}" onclick="return confirm('Attention vous vous apprettez à supprimer une tâche P1')"><i class="fas fa-trash"></i></a>
                                            {% endif %}
                                        </td>
                                    {% endif %}
                                {% endif %}

                                {% set showDoneButtonCw = roles[userRole].button_done is defined and roles[userRole].button_done %}
                                {% if showDoneButtonCw %}
                                    <td class="form-switch">
                                        {# {% if roles[userRole].show_button_done_in_nw is defined and roles[userRole].show_button_done_in_nw %} #}
                                        <input type="checkbox" class="taskdone" {{ (task.done) ? 'checked' : '' }} data-taskdone="{{task.id}}">
                                        {# {% endif %} #}
                                    </td>
                                {% endif %}
                               
                                
                                </tr>
                                

           
                            </tr>
                        {% endif %}
                    {% endfor %}
                </tbody>
            </table>

                {% if roles[userRole].show_switch_to_cw is defined and roles[userRole].show_switch_to_cw %}
					{% if task is empty and appointment is empty %}
						<div style="pointer-events: none" class="mt-5 text-center color-yellow"><span>Il faut au moins une donnée pour faire le basculement</span></div>
					{% else %}			
						<a class="mt-3 text-center btn-yellow btn" href="{{ path('mission_nw_change_to_cw_front') }}">Basculer en semaine actuelle</a>
					{% endif %}
                {% endif %}
				
        </div>

		<!-- POPUP -->
		<!-- Task P1 -->
		<div id="ajouterunetachep1" class="overlay">
			<div class="popup bg-blue-dark-light">
				<a class="close" href=""><i class="fas fa-times"></i></a>
                {{ form_start(form_task_nw_p1_add) }}
                    <div class="row">
                        <div class="col">
                            <div class="input">{{ form_row(form_task_nw_p1_add.customer) }}</div>
                            {{ form_row(form_task_nw_p1_add.object) }}
                            {{ form_row(form_task_nw_p1_add.subobject1) }}
                            {{ form_row(form_task_nw_p1_add.subobject2) }}
                            {{ form_row(form_task_nw_p1_add.subobject3) }}
                        </div>
                        <div class="col">
                            <p class="text-left color-yellow text-bold">Personne(s)</p>
                            <div class="bg-blue-dark text-left users">
                                {{ form_row(form_task_nw_p1_add.users) }}
                            </div>
                            <div class="text-left mt-3 color-yellow">
                                {{ form_row(form_task_nw_p1_add.p1) }}
                                {{ form_row(form_task_nw_p1_add.nextweek) }}
                            </div>
                            {{ form_row(form_task_nw_p1_add.submit) }}
                        </div>
                    </div>
                {{ form_end(form_task_nw_p1_add) }}
			</div>
		</div>
	</div>
{%  endblock %}
{% block javascripts %}
	{{ parent() }}
	<script>
		$(()=>{
			$("#tableOrderTaskP1").on("reorder-row.bs.table", (e, table, row, old) => {
				$.ajax({
					url: "{{ path('reorder')}}",
					method: "POST",
					data: {
						table: JSON.stringify(table),
						context: 1
					},
					dataType: "JSON"
				})
			})
			$("#tableOrderTaskP2").on("reorder-row.bs.table", (e, table, row, old) => {
				$.ajax({
					url: "{{ path('reorder')}}",
					method: "POST",
					data: {
						table: JSON.stringify(table),
						context: 1
					},
					dataType: "JSON"
				})
			})
			$("#tableOrderAppointment").on("reorder-row.bs.table", (e, table, row, old) => {
				$.ajax({
					url: "{{ path('reorder')}}",
					method: "POST",
					data: {
						table: JSON.stringify(table),
						context: 2
					},
					dataType: "JSON"
				})
			})
			$("#tableOrderQuote").on("reorder-row.bs.table", (e, table, row, old) => {
				$.ajax({
					url: "{{ path('reorder')}}",
					method: "POST",
					data: {
						table: JSON.stringify(table),
						context: 3
					},
					dataType: "JSON"
				})
			})
		})
	</script>
{% endblock %}